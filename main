import random
from Crypto.Cipher import AES
from secrets import token_bytes

def encryption_1(insert_message):
    Binary= {
   "a" : "01100001",
   "b" : "01100010",
   "c" : "01100011",
   "d" : "01100100",
   "e" : "01100101",
   "f" : "01100110",
   "g" : "01100111",
   "h" : "01101000",
   "i" : "01101001",
   "j" : "01101010",
   "k" : "01101011",
   "l" : "01101100",
   "m" : "01101101",
   "n" : "01101110",
   "o" : "01101111",
   "p" : "01110000",
   "q" : "01110001",
   "r" : "01110010",
   "s" : "01110011",
   "t" : "01110100",
   "u" : "01110101",
   "v" : "01110110",
   "w" : "01110111",
   "x" : "01111000",
   "y" : "01111001",
   "z" : "01111010",
   "A" : "01000001",
   "B" : "01000010",
   "C" : "01000011",
   "D" : "01000100",
   "E" : "01000101",
   "F" : "01000110",
   "G" : "01000111",
   "H" : "01001000",
   "I" : "01001001",
   "J" : "01001010",
   "K" : "01001011",
   "L" : "01001100",
   "M" : "01001101",
   "N" : "01001110",
   "O" : "01001111",
   "P" : "01010000",
   "Q" : "01001111",
   "R" : "01010010",
   "S" : "01010011",
   "T" : "01010100",
   "U" : "01010101",
   "V" : "01010110",
   "W" : "01010111",
   "X" : "01011000",
   "Y" : "01011001",
   "Z" : "01011010",
   '/' : "01011011",
   ##'\' : "01011110", #not accepting '\' as a key why???
   "'" : "01011110",
   

   #,
   
}
    
    cipher=''
    for letter in insert_message:
        if letter != ' ':
    
            cipher+=Binary[letter]+' '
        else:
            cipher += ' '


    print(cipher)     
        
                  


def encryption_2(insert_message):
    #string reverse
    rev_string = "".join(reversed(insert_message))
    #swapping of even and odd elements
    b=list(rev_string.split())
    s=len(b)
    if s%2!=0:
        s=s-1
    for i in range(0,s,2):
        b[i],b[i+1]=b[i+1],b[i]
    print("List after swapping :",b)
#re-swapping
    s=len(b)
    if s%2!=0:
        s=s-1
    for i in range(0,s,2):
        b[i+1],b[i]=b[i],b[i+1]
    print("List after swapping :",b)
#list to string
    string=""
    for element in b:
     string+=element+" "







#Morse cipher
    message=string.upper()
    cipher = ''
    for letter in message:
        if letter != ' ':
  
            # Looks up the dictionary and adds the
            # correspponding morse code
            # along with a space to separate
            # morse codes for different characters
            cipher += MORSE[letter] + ' '
        else:
            # 1 space indicates different characters
            # and 2 indicates different words
            cipher += ' '
    print(cipher) 
    
MORSE={  
    'A':'à¤…',
    #'A':'.-', 
    'B':'-...',
    'C':'-.-.', 
    'D':'-..', 
    'E':'.',
    'F':'..-.', 
    'G':'--.', 
    'H':'....',
    'I':'..',
    'J':'.---',
    'K':'-.-',
    'L':'.-..', 
    'M':'--', 
    'N':'-.',
    'O':'---',
    'P':'.--.',
    'Q':'--.-',
    'R':'.-.', 
    'S':'...', 
    'T':'-',
    'U':'..-', 
    'V':'...-',
    'W':'.--',
    'X':'-..-', 
    'Y':'-.--', 
    'Z':'--..',
    '1':'.----',
    '2':'..---', 
    '3':'...--',
    '4':'....-',
    '5':'.....',
    '6':'-....',
    '7':'--...', 
    '8':'---..',
    '9':'----.',
    '0':'-----',
    ', ':'--..--',
    '.':'.-.-.-',
    '?':'..--..', 
    '/':'-..-.', 
    '-':'-....-',
    '(':'-.--.', 
    ')':'-.--.-'
    } 
      
      
key = token_bytes(16)

def encrypt_AES(msg): ## Encryption algorithm 
    cipher = AES.new(key, AES.MODE_EAX)
    nonce = cipher.nonce
    ciphertext, tag = cipher.encrypt_and_digest(msg.encode('ascii'))
    return nonce, ciphertext, tag

#nonce, ciphertext, tag = encrypt_AES(input('Enter a message: '))
#print(f'Cipher text: {ciphertext}')

#insert_message=input("ENTER YOUR MESSAGE TO ENCRYPT--")
insert_message="hello how '' "
encryption_1(insert_message)
#encryption_1(ciphertext)
